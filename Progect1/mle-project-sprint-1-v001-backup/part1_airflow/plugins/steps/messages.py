from airflow.providers.telegram.hooks.telegram import TelegramHook
import os
import logging

from airflow.models import Variable

# TELEGRAM_BOT_TOKEN = Variable.get("TELEGRAM_BOT_TOKEN")
# TELEGRAM_CHAT_ID = Variable.get("TELEGRAM_CHAT_ID")

def send_telegram_success_message(context):
    print("üü¢ CALLBACK SUCCESS TRIGGERED")
    """
    Send success notification to Telegram
    """
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
    TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        raise ValueError("Telegram credentials not set in environment variables!")

    hook = TelegramHook(
        token=TELEGRAM_BOT_TOKEN,
        chat_id=TELEGRAM_CHAT_ID
    )
    dag_id = context['dag'].dag_id
    run_id = context['run_id']
    message = f"‚úÖ DAG {dag_id} —Å id={run_id} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!"
    hook.send_message({'chat_id': TELEGRAM_CHAT_ID, 'text': message})
    logger.info("üîπ –¢–æ–∫–∫–µ–Ω—ã %s: –Ω–∏–∂–Ω—è—è %f, –≤–µ—Ä—Ö–Ω—è—è %f", TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID)

def send_telegram_failure_message(context):
    print("üî¥ CALLBACK FAILURE TRIGGERED")
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
    TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        raise ValueError("Telegram credentials not set in environment variables!")

    hook = TelegramHook(
        token=TELEGRAM_BOT_TOKEN,
        chat_id=TELEGRAM_CHAT_ID
    )
    dag_id = context['dag'].dag_id
    task_instance_key_str = context['task_instance_key_str']
    run_id = context['run_id']
    message = f"üî• –û—à–∏–±–∫–∞ –≤ DAG {dag_id}, –∑–∞–¥–∞—á–∞ {task_instance_key_str}, run_id={run_id}!"
    hook.send_message({'chat_id': TELEGRAM_CHAT_ID, 'text': message})